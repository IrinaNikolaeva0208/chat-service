version: '3.9'

services:
  chat: 
    build: 
      context: .
      dockerfile: ./src/chat/Dockerfile
      target: production
    command: npm run start
    container_name: chat
    restart: always
    networks:
      - app-network
    depends_on:
      - postgres 
    ports:
      - "${WS_PORT}:${WS_PORT}" 

  auth: 
    build: 
      context: .
      dockerfile: ./src/auth/Dockerfile
      target: production
    command: npm run start
    container_name: auth
    restart: always
    networks:
      - app-network
    depends_on:
      - postgres 
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
      - "${OAUTH_PORT}:${OAUTH_PORT}" 

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    networks:
      - app-network
    ports:
      - "${POSTGRES_PORT}"
    env_file:
      - .env


networks:
  app-network:
    driver: bridge

volumes:
  app-volume: