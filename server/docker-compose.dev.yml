version: '3.9'

services:
  chat: 
    build: 
      context: .
      dockerfile: ./src/chat/Dockerfile
      target: development
    command: npm run start:dev
    container_name: chat
    restart: always
    networks:
      - app-network
    ports:
      - "${WS_PORT}:${WS_PORT}"  
    depends_on:
      - postgres   
    volumes:
      - './src/chat/:/app/src/chat'

  auth: 
    build: 
      context: .
      dockerfile: ./src/auth/Dockerfile
      target: development
    command: npm run start:dev
    container_name: auth
    restart: always
    networks:
      - app-network
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}" 
      - "${OAUTH_PORT}:${OAUTH_PORT}" 
    depends_on:
      - postgres   
    volumes:
      - './src/auth/:/app/src/auth'

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    networks:
      - app-network
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env


networks:
  app-network:
    driver: bridge

volumes:
  app-volume: